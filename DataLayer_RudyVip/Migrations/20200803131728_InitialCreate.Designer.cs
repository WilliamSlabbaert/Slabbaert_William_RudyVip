// <auto-generated />
using System;
using DataLayer_RudyVip;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLayer_RudyVip.Migrations
{
    [DbContext(typeof(CarContext))]
    [Migration("20200803131728_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Console_App_RudyVip.Car", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FirstHourPrice")
                        .HasColumnType("float");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NightlifePrice")
                        .HasColumnType("float");

                    b.Property<double>("WeddingPrice")
                        .HasColumnType("float");

                    b.Property<double>("WellnessPrice")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("CarData");
                });

            modelBuilder.Entity("Console_App_RudyVip.ObjectClasses.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BtwNummer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Categorie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNummer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CustomerData");
                });

            modelBuilder.Entity("Console_App_RudyVip.Reservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Categorie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliverAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("ExclusiveBTWPrice")
                        .HasColumnType("float");

                    b.Property<string>("OrderAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OverHours")
                        .HasColumnType("int");

                    b.Property<double>("OverHoursPriceTotal")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("ReservationData");
                });

            modelBuilder.Entity("Console_App_RudyVip.ReservationCars", b =>
                {
                    b.Property<int>("carID")
                        .HasColumnType("int");

                    b.Property<int>("reservationID")
                        .HasColumnType("int");

                    b.Property<int>("customerID")
                        .HasColumnType("int");

                    b.HasKey("carID", "reservationID");

                    b.HasIndex("customerID");

                    b.HasIndex("reservationID");

                    b.ToTable("ReservationCarsData");
                });

            modelBuilder.Entity("Console_App_RudyVip.ReservationCars", b =>
                {
                    b.HasOne("Console_App_RudyVip.Car", "car")
                        .WithMany("ReservationCars")
                        .HasForeignKey("carID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Console_App_RudyVip.ObjectClasses.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("customerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Console_App_RudyVip.Reservation", "reservation")
                        .WithMany()
                        .HasForeignKey("reservationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
